version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: recruitment-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-secretpassword}
      MONGO_INITDB_DATABASE: recruitment_dashboard
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - recruitment-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: recruitment-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:${MONGO_PASSWORD:-secretpassword}@mongodb:27017/recruitment_dashboard?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      JWT_EXPIRE: 7d
      CLIENT_URL: ${CLIENT_URL:-http://localhost}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - recruitment-network

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api}
        VITE_WS_URL: ${VITE_WS_URL:-http://localhost:5000}
    container_name: recruitment-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - recruitment-network

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: recruitment-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - recruitment-network

  # Backup service
  backup:
    image: tutum/mongodb-backup
    container_name: recruitment-backup
    restart: unless-stopped
    environment:
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_USER: admin
      MONGODB_PASS: ${MONGO_PASSWORD:-secretpassword}
      MONGODB_DB: recruitment_dashboard
      CRON_TIME: "0 2 * * *"  # Daily at 2 AM
      MAX_BACKUPS: 7
    volumes:
      - ./backups:/backup
    depends_on:
      - mongodb
    networks:
      - recruitment-network

networks:
  recruitment-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: